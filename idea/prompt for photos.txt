SnapFlow is an AI-driven event photo management system designed to streamline image organization, editing, and distribution for various events, including weddings, corporate gatherings, sports competitions, and more. It enables clients to create custom event websites, allowing photographers to upload images in real time while AI-powered tools automatically tag, enhance, and categorize photos based on event type, special moments, and quality metrics. Users can search images via NLP-powered queries, opt for privacy controls, and leverage AI-assisted content moderation to ensure secure and GDPR-compliant data handling. The platform also supports AI-generated highlight reels, automated storyboard creation, and collaboration tools for photographers and editors, making event photo management more efficient and interactive.


i am developing this project using django for backend and html css js for frontend.i will now explain the different django apps, project flow, features etc

home

this app renders the homepage, contact page, about page etc. it does not implement any of the main features.


users

this django app handles the user authentication and verification. there are basically 3 type of users for this website : Event Organizer, Photographer and Participant.


the user can create account to the platform and complete their account based on usertype. user profile is compurlory since it is later used for photo matching.

i will explain the main features of each type of user

organizer

* create events
* edit events
* manage crew members(photographers)
* manage participants
* invite participants and photographers
* edit the event configurations
* upload event photos
* edit photos
* comment and like photos
* 

Photographer

* join event using an event code
* upload photos
* manage the event equipment configurations
* edit or delete photos

Participants

* register events using event code
* view the photos posted by photographers


events

this django app handles the event related all views and functions. event create, edit, list, dashboard, gallery, event config etc.

photos 

this django app handles the user photo uploads, gallery view, photo like, comment delete etc.


now i need to add these ai features to the app photos

i will explain the backend flow.

when the photographer or organizer uploads the photos, i will be stored in the path
media/events/<event_id>_<event_slug/ directory.

the user profile photos are stored in the directory media/user_avatars/



the main feature i am trying to implement is that, after the photos are uploaded, it should be processed and should show to the participants dashboard. the photos should be matched with their profile picture.

can you help me on implementing these features. i also implemented the gallery, photolike, photocomment, photoupload, photodelete part of the photos app. so help me implement the rest of the features


i will share the models i defined till now of each apps


events

Table: events_event
-----------------------------------------
id               | INT (Primary Key, Auto-increment)
title            | VARCHAR(200)
slug             | VARCHAR(255) (Unique)
event_type       | VARCHAR(20) (Choices: WEDDING, BIRTHDAY, CORPORATE, etc.)
description      | TEXT
start_date       | DATETIME
end_date         | DATETIME
timezone         | VARCHAR(50) (Default: 'UTC')
location         | VARCHAR(255)
event_code       | VARCHAR(6) (Unique)
primary_color    | CHAR(7) (Default: '#ffffff')
secondary_color  | CHAR(7) (Default: '#000000')
status           | VARCHAR(20) (Choices: DRAFT, ACTIVE, COMPLETED, CANCELLED)
organizer_id     | INT (Foreign Key -> auth_user.id)
custom_domain    | VARCHAR(255)
theme_id         | INT (Foreign Key -> events_eventtheme.id, Nullable)
logo             | VARCHAR(255) (Image Path, Nullable)
cover_image      | VARCHAR(255) (Image Path, Nullable)
is_public        | BOOLEAN (Default: False)
require_registration | BOOLEAN (Default: True)
allow_guest_upload  | BOOLEAN (Default: False)
enable_face_detection | BOOLEAN (Default: True)
enable_moment_detection | BOOLEAN (Default: True)
enable_auto_tagging | BOOLEAN (Default: True)
created_at       | DATETIME (Auto Now Add)
updated_at       | DATETIME (Auto Now)


Table: events_eventcrew
-----------------------------------------
id               | INT (Primary Key, Auto-increment)
event_id         | INT (Foreign Key -> events_event.id)
member_id        | INT (Foreign Key -> auth_user.id)
role             | VARCHAR(20) (Choices: LEAD, SECOND, ASSISTANT, etc.)
is_confirmed     | BOOLEAN (Default: False)
notes            | TEXT (Nullable)
equipment        | TEXT (Nullable)
assigned_area    | VARCHAR(100) (Nullable)
created_at       | DATETIME (Auto Now Add)
updated_at       | DATETIME (Auto Now)
UNIQUE (event_id, member_id)

Table: events_eventparticipant
-----------------------------------------
id               | INT (Primary Key, Auto-increment)
event_id         | INT (Foreign Key -> events_event.id)
user_id          | INT (Foreign Key -> auth_user.id, Nullable)
email            | VARCHAR(255)
name             | VARCHAR(100)
participant_type | VARCHAR(20) (Choices: GUEST, VIP, SPEAKER, etc.)
is_registered    | BOOLEAN (Default: False)
registration_code | VARCHAR(20) (Unique)
allow_photos     | BOOLEAN (Default: True)
request_blur     | BOOLEAN (Default: False)
created_at       | DATETIME (Auto Now Add)
updated_at       | DATETIME (Auto Now)
UNIQUE (event_id, email)

Table: events_eventconfiguration
-----------------------------------------
id                 | INT (Primary Key, Auto-increment)
event_id           | INT (Foreign Key -> events_event.id, Unique)
enable_comments    | BOOLEAN (Default: True)
enable_likes       | BOOLEAN (Default: True)
enable_download    | BOOLEAN (Default: False)
download_watermark | BOOLEAN (Default: True)
max_upload_size    | INT (Default: 10485760)  # 10MB
allowed_formats    | VARCHAR(200) (Default: 'jpg,jpeg,png,heic')
enable_face_grouping | BOOLEAN (Default: True)
enable_scene_detection | BOOLEAN (Default: True)
enable_quality_filter  | BOOLEAN (Default: True)
notify_on_upload  | BOOLEAN (Default: True)
notify_on_comment | BOOLEAN (Default: True)
created_at        | DATETIME (Auto Now Add)
updated_at        | DATETIME (Auto Now)





photos

Table: photos_eventphoto
---------------------------------------------------------
id               | INT (Primary Key, Auto-increment)
event_id         | INT (Foreign Key -> events_event, CASCADE)
image            | VARCHAR(255) (Image Path)
caption          | VARCHAR(200) (Nullable)
uploaded_by_id   | INT (Foreign Key -> users_customuser, SET NULL, Nullable)
upload_date      | DATETIME (Auto Now Add)

# AI Processing Fields
processed        | BOOLEAN (Default: False)
quality_score    | FLOAT (Nullable)
detected_faces   | JSON (Nullable)
scene_tags       | JSON (Nullable)

# Engagement metrics
view_count       | INT (Default: 0)
like_count       | INT (Default: 0)

INDEX (event_id)
INDEX (uploaded_by_id)
---------------------------------------------------------

Table: photos_photolike
---------------------------------------------------------
id               | INT (Primary Key, Auto-increment)
photo_id         | INT (Foreign Key -> photos_eventphoto, CASCADE)
user_id          | INT (Foreign Key -> users_customuser, CASCADE)
created_at       | DATETIME (Auto Now Add)

UNIQUE (photo_id, user_id)
INDEX (photo_id)
INDEX (user_id)
---------------------------------------------------------

Table: photos_photocomment
---------------------------------------------------------
id               | INT (Primary Key, Auto-increment)
photo_id         | INT (Foreign Key -> photos_eventphoto, CASCADE)
user_id          | INT (Foreign Key -> users_customuser, CASCADE)
comment          | TEXT
created_at       | DATETIME (Auto Now Add)
updated_at       | DATETIME (Auto Now)

INDEX (photo_id)
INDEX (user_id)
---------------------------------------------------------




users


Table: users_customuser
-----------------------------------------
id                   | INT (Primary Key, Auto-increment)
username             | VARCHAR(150) (Unique)
email                | VARCHAR(254) (Unique, Nullable)
password             | VARCHAR(128)
first_name           | VARCHAR(150)
last_name            | VARCHAR(150)
date_joined          | DATETIME (Auto Now Add)
last_login           | DATETIME (Nullable)
is_active            | BOOLEAN (Default: True)
is_staff             | BOOLEAN (Default: False)
is_superuser         | BOOLEAN (Default: False)

role                 | VARCHAR(20) (Choices: ORGANIZER, PHOTOGRAPHER, PARTICIPANT, Nullable)

# Common fields for all users
avatar               | VARCHAR(255) (Image Path, Nullable)
phone_number         | VARCHAR(15) (Nullable)

# Organizer specific fields
company_name         | VARCHAR(100) (Nullable)
website              | VARCHAR(200) (Nullable)

# Photographer specific fields
portfolio_url        | VARCHAR(200) (Nullable)
photographer_role    | VARCHAR(20) (Choices: LEAD, ASSISTANT, SECONDARY, Nullable)
watermark            | VARCHAR(255) (Image Path, Nullable)

# Participant specific fields
participant_type     | VARCHAR(20) (Choices: GUEST, FAMILY, FRIEND, WINNER, OTHER, Nullable)
image_visibility     | VARCHAR(20) (Choices: PUBLIC, PRIVATE, EVENT_ONLY, Default: PRIVATE)
blur_requested       | BOOLEAN (Default: False)
remove_requested     | BOOLEAN (Default: False)
is_verified          | BOOLEAN (Default: False)

UNIQUE (username, email)
